# GSUB


# =================================================================================
# LOOKUP DEFINITIONS

	# 0. PREFATORY SUBSTITUTIONS --------------------------------------------------
		
		lookup CALT_singleSubstitutions {
			lookupflag 0;
			sub  quoteright  by  quotesingle;
			sub  quoteleft   by  quotesingle;
		
			} CALT_singleSubstitutions;


	# 1. LIGATURES ----------------------------------------------------------------

		lookup LIGA_figures {
			lookupflag 0;
			sub  one zero   by  one_zero   ;
			sub  one one    by  one_one    ;
			sub  one two    by  one_two    ;
			sub  one three  by  one_three  ;
			sub  one four   by  one_four   ;
			} LIGA_figures;


		lookup LIGA_slashedFigures {
			lookupflag 0;
			sub   two   slash                 by   two_slash    ;
			sub   three slash                 by   three_slash  ;
			sub   four  slash                 by   four_slash   ;
			sub   five  slash                 by   five_slash   ;
			sub   six   slash                 by   six_slash    ;
			sub   seven slash                 by   seven_slash  ;
			sub   nine  slash                 by   nine_slash   ;

			sub   two   slash  slash          by   two_slash.alt    ;
			sub   three slash  slash          by   three_slash.alt  ;
			sub   four  slash  slash          by   four_slash.alt   ;
			sub   five  slash  slash          by   five_slash.alt   ;
			sub   six   slash  slash          by   six_slash.alt    ;
			sub   seven slash  slash          by   seven_slash.alt  ;
			sub   nine  slash  slash          by   nine_slash.alt   ;

			sub   six   slash  slash  slash   by   six_backslash  ;
			sub   six   backslash             by   six_backslash  ;
			sub   seven backslash             by   seven_slash    ;

			sub   two   slash  slash  slash          by   stop  ;
			sub   three slash  slash  slash          by   stop  ;
			sub   four  slash  slash  slash          by   stop  ;
			sub   five  slash  slash  slash          by   stop  ;
			sub   six   slash  slash  slash  slash   by   stop  ;
			sub   seven slash  slash  slash          by   stop  ;
			sub   nine  slash  slash  slash          by   stop  ;

			sub   six   backslash  backslash         by   stop  ;
			sub   seven backslash  backslash         by   stop  ;

			sub   one        slash   by   stop  ;
			sub   eight      slash   by   stop  ;
			sub   one_zero   slash   by   stop  ;
			sub   one_two    slash   by   stop  ;
			sub   one_three  slash   by   stop  ;
			sub   one_four   slash   by   stop  ;
			} LIGA_slashedFigures;


		lookup LIGA_figuresPlus {
			lookupflag 0;
			sub   two    plus   by   two_plus     ;
			sub   four   plus   by   four_plus    ;
			sub   five   plus   by   five_plus    ;
			sub   six    plus   by   six_tick     ;
			sub   seven  plus   by   seven_tick   ;
			sub   nine   plus   by   nine_tick    ;

			# sub   one        plus   by   stop   ;
			# sub   three      plus   by   stop   ;
			# sub   eight      plus   by   stop   ;
			# sub   one_zero   plus   by   stop   ;
			# sub   one_two    plus   by   stop   ;
			# sub   one_three  plus   by   stop   ;
			# sub   one_four   plus   by   stop   ;
			} LIGA_figuresPlus;


		lookup LIGA_tickedFigures {
			lookupflag 0;


			sub   two  quotesingle                            by   two_tick        ;
			sub   two  quotesingle quotesingle                by   two_tick.alt    ;
			sub   two  quotesingle quotesingle quotesingle    by   stop            ;

			sub   four  quotesingle                           by   four_tick       ;
			sub   four  quotesingle quotesingle               by   stop            ;

			sub   five  quotesingle                           by   five_tick        ;
			sub   five  quotesingle quotesingle               by   five_tick.alt    ;
			sub   five  quotesingle quotesingle quotesingle   by   stop             ;

			sub   six  quotesingle                            by   six_tick        ;
			sub   six  quotesingle quotesingle                by   six_tick.alt    ;
			sub   six  quotesingle quotesingle quotesingle    by   stop            ;

			sub   seven  quotesingle                          by   seven_tick      ;
			sub   seven  quotesingle quotesingle              by   stop            ;

			sub   nine  quotesingle                           by   nine_tick       ;
			sub   nine  quotesingle quotesingle               by   stop            ;

			sub   one        quotesingle                      by   stop            ;
			sub   three      quotesingle                      by   stop            ;
			sub   eight      quotesingle                      by   stop            ;
			sub   one_zero   quotesingle                      by   stop            ;
			sub   one_two    quotesingle                      by   stop            ;
			sub   one_three  quotesingle                      by   stop            ;
			sub   one_four   quotesingle                      by   stop            ;

			} LIGA_tickedFigures;

		
		lookup LIGA_italicFigures {
			lookupflag 0;
			# sub  i one zero  by  i_one_zero  ;
			sub  i one_zero  by  i_one_zero  ;
			# sub  i one one   by  i_one_one   ;
			sub  i one_one   by  i_one_one   ;
			# sub  i one two   by  i_one_two   ;
			sub  i one_two   by  i_one_two   ;
			sub  i one_three by  i_one_three ;
			sub  i one_four  by  i_one_four  ;

			sub  i zero      by  i_zero      ;
			sub  i one       by  i_one       ;
			sub  i two       by  i_two       ;
			sub  i three     by  i_three     ;
			sub  i four      by  i_four      ;
			sub  i five      by  i_five      ;
			sub  i six       by  i_six       ;
			sub  i seven     by  i_seven     ;
			sub  i eight     by  i_eight     ;
			sub  i nine      by  i_nine      ;

			sub  i two_slash         by  i_two_slash       ;
			sub  i two_slash.alt     by  i_two_slash.alt   ;
			sub  i two_tick          by  i_two_tick        ;
			sub  i two_tick.alt      by  i_two_tick.alt    ;
			sub  i two_plus          by  i_two_plus        ;

			sub  i three_slash       by  i_three_slash     ;
			sub  i three_slash.alt   by  i_three_slash.alt ;

			sub  i four_slash        by  i_four_slash      ;
			sub  i four_slash.alt    by  i_four_slash.alt  ;
			sub  i four_tick         by  i_four_tick       ;
			sub  i four_plus         by  i_four_plus       ;

			sub  i five_slash        by  i_five_slash      ;
			sub  i five_slash.alt    by  i_five_slash.alt  ;
			sub  i five_tick         by  i_five_tick       ;
			sub  i five_tick.alt     by  i_five_tick.alt   ;
			sub  i five_plus         by  i_five_plus       ;

			sub  i six_slash         by  i_six_slash       ;
			sub  i six_slash.alt     by  i_six_slash.alt   ;
			sub  i six_tick          by  i_six_tick        ;
			sub  i six_tick.alt      by  i_six_tick.alt    ;
			sub  i six_backslash     by  i_six_backslash   ;

			sub  i seven_slash       by  i_seven_slash     ;
			sub  i seven_slash.alt   by  i_seven_slash.alt ;
			sub  i seven_tick        by  i_seven_tick      ;

			sub  i nine_slash        by  i_nine_slash      ;
			sub  i nine_slash.alt    by  i_nine_slash.alt  ;
			sub  i nine_tick         by  i_nine_tick       ;
			} LIGA_italicFigures;


		lookup LIGA_accidentals {
			lookupflag 0;
			sub  b b  by  b_b  ;
			} LIGA_accidentals;


		lookup LIGA_parenthesizedAccidentals {
			lookupflag 0;

			sub  parenleft   numbersign  parenright    by  parenleft_s_parenright        ;
			sub  parenleft   s           parenright    by  parenleft_s_parenright        ;
			sub  parenleft   b           parenright    by  parenleft_b_parenright        ;
			sub  parenleft   n           parenright    by  parenleft_n_parenright        ;
			sub  parenleft   x           parenright    by  parenleft_x_parenright        ;
			sub  parenleft   b b         parenright    by  parenleft_b_b_parenright      ;
			sub  parenleft   b_b         parenright    by  parenleft_b_b_parenright      ;
			sub  parenleft   p           parenright    by  parenleft_p_parenright        ;
			sub  parenleft   m           parenright    by  parenleft_m_parenright        ;
			sub  parenleft   plus        parenright    by  parenleft_p_parenright        ;
			sub  parenleft   hyphen      parenright    by  parenleft_m_parenright        ;
			sub  parenleft   X           parenright    by  parenleft_X_parenright        ;

			sub  bracketleft s           bracketright  by  bracketleft_s_bracketright    ;
			sub  bracketleft numbersign  bracketright  by  bracketleft_s_bracketright    ;
			sub  bracketleft b           bracketright  by  bracketleft_b_bracketright    ;
			sub  bracketleft n           bracketright  by  bracketleft_n_bracketright    ;
			sub  bracketleft x           bracketright  by  bracketleft_x_bracketright    ;
			sub  bracketleft b b         bracketright  by  bracketleft_b_b_bracketright  ;
			sub  bracketleft b_b         bracketright  by  bracketleft_b_b_bracketright  ;
			sub  bracketleft p           bracketright  by  bracketleft_p_bracketright    ;
			sub  bracketleft m           bracketright  by  bracketleft_m_bracketright    ;
			sub  bracketleft plus        bracketright  by  bracketleft_p_bracketright    ;
			sub  bracketleft hyphen      bracketright  by  bracketleft_m_bracketright    ;
			sub  bracketleft X           bracketright  by  bracketleft_X_bracketright    ;

			} LIGA_parenthesizedAccidentals;


	# 2. SUBSTITUTIONS ------------------------------------------------------------

		# 2.1 substitute invisible parentheses

			lookup replaceBarLeft {
				lookupflag 0;
				sub  bar  by  parenleft.invisible  ;
				} replaceBarLeft;
			
			lookup replaceBarRight {
				lookupflag 0;
				sub  bar  by  parenright.invisible  ;
				} replaceBarRight;

			lookup CALT_invisibleParens {
				lookupflag 0;

				sub  bar' lookup replaceBarLeft  @allNoParens  @parenRight  ;
				sub  bar' lookup replaceBarLeft  @allNoParens  @allNoParens  @parenRight  ;
				sub  bar' lookup replaceBarLeft  @allNoParens  @allNoParens  @allNoParens  @parenRight  ;
				sub  bar' lookup replaceBarLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @parenRight  ;
				sub  bar' lookup replaceBarLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @parenRight  ;
				sub  bar' lookup replaceBarLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @parenRight  ;
				sub  bar' lookup replaceBarLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @parenRight  ;
				sub  bar' lookup replaceBarLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @parenRight  ;
				sub  bar' lookup replaceBarLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @parenRight  ;
				sub  bar' lookup replaceBarLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @parenRight  ;

				sub  @parenLeft  @allNoParens  bar' lookup replaceBarRight  ;
				sub  @parenLeft  @allNoParens  @allNoParens  bar' lookup replaceBarRight  ;
				sub  @parenLeft  @allNoParens  @allNoParens  @allNoParens  bar' lookup replaceBarRight  ;
				sub  @parenLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  bar' lookup replaceBarRight  ;
				sub  @parenLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  bar' lookup replaceBarRight  ;
				sub  @parenLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  bar' lookup replaceBarRight  ;
				sub  @parenLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  bar' lookup replaceBarRight  ;
				sub  @parenLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  bar' lookup replaceBarRight  ;
				sub  @parenLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  bar' lookup replaceBarRight  ;
				sub  @parenLeft  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  @allNoParens  bar' lookup replaceBarRight  ;

				} CALT_invisibleParens;

		# 2.2 add separators

			lookup addSepRight {
				lookupflag 0;

				sub zero                          by  zero                          sep  ;
				sub one                           by  one                           sep  ;
				sub two                           by  two                           sep  ;
				sub three                         by  three                         sep  ;
				sub four                          by  four                          sep  ;
				sub five                          by  five                          sep  ;
				sub six                           by  six                           sep  ;
				sub seven                         by  seven                         sep  ;
				sub eight                         by  eight                         sep  ;
				sub nine                          by  nine                          sep  ;
				sub one_zero                      by  one_zero                      sep  ;
				sub one_one                       by  one_one                       sep  ;
				sub one_two                       by  one_two                       sep  ;
				sub one_three                     by  one_three                     sep  ;
				sub one_four                      by  one_four                      sep  ;

				sub i_zero                        by  i_zero                        sep  ;
				sub i_one                         by  i_one                         sep  ;
				sub i_two                         by  i_two                         sep  ;
				sub i_three                       by  i_three                       sep  ;
				sub i_four                        by  i_four                        sep  ;
				sub i_five                        by  i_five                        sep  ;
				sub i_six                         by  i_six                         sep  ;
				sub i_seven                       by  i_seven                       sep  ;
				sub i_eight                       by  i_eight                       sep  ;
				sub i_nine                        by  i_nine                        sep  ;
				sub i_one_zero                    by  i_one_zero                    sep  ;
				sub i_one_one                     by  i_one_one                     sep  ;
				sub i_one_two                     by  i_one_two                     sep  ;
				sub i_one_three                   by  i_one_three                   sep  ;
				sub i_one_four                    by  i_one_four                    sep  ;

				sub b                             by  b                             sep  ;
				sub n                             by  n                             sep  ;
				sub x                             by  x                             sep  ;
				sub X                             by  X                             sep  ;
				sub s                             by  s                             sep  ;
				sub numbersign                    by  numbersign                    sep  ;
				sub hyphen                        by  hyphen                        sep  ;
				sub plus                          by  plus                          sep  ;
				sub p                             by  p                             sep  ;
				sub m                             by  m                             sep  ;

				sub b_b                           by  b_b                           sep  ;

				sub two_plus                      by  two_plus                      sep  ;
				sub four_plus                     by  four_plus                     sep  ;
				sub five_plus                     by  five_plus                     sep  ;

				sub two_slash                     by  two_slash                     sep  ;
				sub three_slash                   by  three_slash                   sep  ;
				sub four_slash                    by  four_slash                    sep  ;
				sub five_slash                    by  five_slash                    sep  ;
				sub six_slash                     by  six_slash                     sep  ;
				sub seven_slash                   by  seven_slash                   sep  ;
				sub nine_slash                    by  nine_slash                    sep  ;

				sub two_slash.alt                 by  two_slash.alt                 sep  ;
				sub three_slash.alt               by  three_slash.alt               sep  ;
				sub four_slash.alt                by  four_slash.alt                sep  ;
				sub five_slash.alt                by  five_slash.alt                sep  ;
				sub six_slash.alt                 by  six_slash.alt                 sep  ;
				sub seven_slash.alt               by  seven_slash.alt               sep  ;
				sub nine_slash.alt                by  nine_slash.alt                sep  ;

				sub two_tick                      by  two_tick                      sep  ;
				sub two_tick.alt                  by  two_tick.alt                  sep  ;
				sub four_tick                     by  four_tick                     sep  ;
				sub five_tick                     by  five_tick                     sep  ;
				sub five_tick.alt                 by  five_tick.alt                 sep  ;
				sub six_tick                      by  six_tick                      sep  ;
				sub six_tick.alt                  by  six_tick.alt                  sep  ;
				sub seven_tick                    by  seven_tick                    sep  ;
				sub nine_tick                     by  nine_tick                     sep  ;

				sub six_backslash                 by  six_backslash                 sep  ;

				sub i_two_slash                   by  i_two_slash                   sep  ;
				sub i_two_slash.alt               by  i_two_slash.alt               sep  ;
				sub i_two_tick                    by  i_two_tick                    sep  ;
				sub i_two_tick.alt                by  i_two_tick.alt                sep  ;
				sub i_two_plus                    by  i_two_plus                    sep  ;

				sub i_three_slash                 by  i_three_slash                 sep  ;
				sub i_three_slash.alt             by  i_three_slash.alt             sep  ;

				sub i_four_slash                  by  i_four_slash                  sep  ;
				sub i_four_slash.alt              by  i_four_slash.alt              sep  ;
				sub i_four_tick                   by  i_four_tick                   sep  ;
				sub i_four_plus                   by  i_four_plus                   sep  ;

				sub i_five_slash                  by  i_five_slash                  sep  ;
				sub i_five_slash.alt              by  i_five_slash.alt              sep  ;
				sub i_five_tick                   by  i_five_tick                   sep  ;
				sub i_five_tick.alt               by  i_five_tick.alt               sep  ;
				sub i_five_plus                   by  i_five_plus                   sep  ;

				sub i_six_slash                   by  i_six_slash                   sep  ;
				sub i_six_slash.alt               by  i_six_slash.alt               sep  ;
				sub i_six_tick                    by  i_six_tick                    sep  ;
				sub i_six_tick.alt                by  i_six_tick.alt                sep  ;
				sub i_six_backslash               by  i_six_backslash               sep  ;

				sub i_seven_slash                 by  i_seven_slash                 sep  ;
				sub i_seven_slash.alt             by  i_seven_slash.alt             sep  ;
				sub i_seven_tick                  by  i_seven_tick                  sep  ;

				sub i_nine_slash                  by  i_nine_slash                  sep  ;
				sub i_nine_slash.alt              by  i_nine_slash.alt              sep  ;
				sub i_nine_tick                   by  i_nine_tick                   sep  ;

				sub d                             by  d                             sep  ;
				sub endash                        by  endash                        sep  ;

				sub parenright                    by  parenright                    sep  ;
				sub bracketright                  by  bracketright                  sep  ;
				sub parenright.invisible          by  parenright.invisible          sep  ;

				sub parenleft_s_parenright        by  parenleft_s_parenright        sep  ;
				sub parenleft_b_parenright        by  parenleft_b_parenright        sep  ;
				sub parenleft_n_parenright        by  parenleft_n_parenright        sep  ;
				sub parenleft_x_parenright        by  parenleft_x_parenright        sep  ;
				sub parenleft_b_b_parenright      by  parenleft_b_b_parenright      sep  ;
				sub parenleft_p_parenright        by  parenleft_p_parenright        sep  ;
				sub parenleft_m_parenright        by  parenleft_m_parenright        sep  ;
				sub parenleft_X_parenright        by  parenleft_X_parenright        sep  ;

				sub bracketleft_s_bracketright    by  bracketleft_s_bracketright    sep  ;
				sub bracketleft_b_bracketright    by  bracketleft_b_bracketright    sep  ;
				sub bracketleft_n_bracketright    by  bracketleft_n_bracketright    sep  ;
				sub bracketleft_x_bracketright    by  bracketleft_x_bracketright    sep  ;
				sub bracketleft_b_b_bracketright  by  bracketleft_b_b_bracketright  sep  ;
				sub bracketleft_p_bracketright    by  bracketleft_p_bracketright    sep  ;
				sub bracketleft_m_bracketright    by  bracketleft_m_bracketright    sep  ;
				sub bracketleft_X_bracketright    by  bracketleft_X_bracketright    sep  ;

				sub comma                         by  comma                         sep  ;
				
				sub stop                          by  stop                          sep  ;

				} addSepRight;


			lookup CALT_addSeparators {
				lookupflag 0;

				# flat is treated separately because occasionally the liga_ture b_b needs to be separated with comma: 2b,b4

				ignore sub                 @figSingle'                       @parenRight             ;
				ignore sub                 @figSingle'                       @comma                  ;
				ignore sub   @figComp      @accNoFlat'                       @parenRight             ;
				ignore sub   @figComp      @flat'                            @parenRight             ;
				ignore sub   @accNoFlat    @figComp'                         @parenRight             ;
				ignore sub   @flat         @figComp'                         @parenRight             ;
				ignore sub                 @flat'                            @comma @flat @figComp   ;
				#ignore sub                 @figComp'                         @accNoFlat              ; # new
				#ignore sub                 @figComp'                         @flat                   ; # new
				#ignore sub                 @figComp'                         @parenRight             ; # new
				#ignore sub                 @figComp'                         @comma                  ; # new
					   sub                 @figComp'    lookup addSepRight   @figComp                ;
					   sub   @accNoFlat    @figComp'    lookup addSepRight                           ;
					   sub   @flat         @figComp'    lookup addSepRight                           ;
					   sub   @figComp      @accNoFlat'  lookup addSepRight                           ;
					   sub   @figComp      @flat'       lookup addSepRight   @figComp                ;
					   sub                 @flat'       lookup addSepRight   @comma @accNoFlat       ;
					   sub                 @flat'       lookup addSepRight   @accNoFlat              ;
					   sub                 @flat'       lookup addSepRight   @comma @flat            ;
					   sub                 @accNoFlat'  lookup addSepRight   @flat                   ;
					   sub                 @accNoFlat'  lookup addSepRight   @comma @flat            ;
					   sub                 @figSingle'  lookup addSepRight                           ;
					   sub                 @accNoFlat'  lookup addSepRight   @figSingle              ;
					   sub                 @flat'       lookup addSepRight   @figSingle              ;
					   sub                 @figComp'    lookup addSepRight   @figSingle              ;
					   sub                 @accNoFlat'  lookup addSepRight   @parenLeft              ;
					   sub                 @flat'       lookup addSepRight   @parenLeft              ;
					   sub                 @figComp'    lookup addSepRight   @parenLeft              ;
					   sub                 @parenRight' lookup addSepRight                           ;
					   sub   @figSingle    @comma'      lookup addSepRight   @figSingle              ;
					   sub   @figSingle    @comma'      lookup addSepRight   @figComp                ;
					   sub   @figComp      @comma'      lookup addSepRight   @figComp                ;
					   sub   @figComp      @comma'      lookup addSepRight   @figSingle              ;
				ignore sub                 @figComp'                         @sepContent             ; # new
				ignore sub                 @figComp'                         @sep                    ; # new
					   sub                 @figComp'    lookup addSepRight                           ; # new
				ignore sub                 @accNoFlat'                       @sepContent             ; # new
				ignore sub                 @flat'                            @sepContent             ; # new
				ignore sub                 @accNoFlat'                       @sep                    ; # new
				ignore sub                 @flat'                            @sep                    ; # new
					   sub                 @accNoFlat'  lookup addSepRight                           ; # new
					   sub                 @flat'       lookup addSepRight                           ; # new

				} CALT_addSeparators;


		# 2.3 enumerate separators

			lookup sep1 {
				lookupflag 0;
				sub comma by sep.1  ;
				sub sep   by sep.1  ;
				sub sep.2 by sep.1  ;
				sub sep.3 by sep.1  ;
				sub sep.4 by sep.1  ;
				sub sep.5 by sep.1  ;
				} sep1;


			lookup sep2 {
				lookupflag 0;
				sub comma by sep.2  ;
				sub sep   by sep.2  ;
				sub sep.1 by sep.2  ;
				sub sep.3 by sep.2  ;
				sub sep.4 by sep.2  ;
				sub sep.5 by sep.2  ;
				} sep2;


			lookup sep3 {
				lookupflag 0;
				sub comma by sep.3  ;
				sub sep   by sep.3  ;
				sub sep.1 by sep.3  ;
				sub sep.2 by sep.3  ;
				sub sep.4 by sep.3  ;
				sub sep.5 by sep.3  ;
				} sep3;


			lookup sep4 {
				lookupflag 0;
				sub comma by sep.4  ;
				sub sep   by sep.4  ;
				sub sep.1 by sep.4  ;
				sub sep.2 by sep.4  ;
				sub sep.3 by sep.4  ;
				sub sep.5 by sep.4  ;
				} sep4;


			lookup sep5 {
				lookupflag 0;
				sub comma by sep.5  ;
				sub sep   by sep.5  ;
				sub sep.1 by sep.5  ;
				sub sep.2 by sep.5  ;
				sub sep.3 by sep.5  ;
				sub sep.4 by sep.5  ;
				} sep5;


			lookup CALT_enumerateSeparators {
				lookupflag 0;

				sub  @sep1  @sepContent  @sepContent  @sepContent  @sepContent  @sep0' lookup sep2  ;
				sub  @sep2  @sepContent  @sepContent  @sepContent  @sepContent  @sep0' lookup sep3  ;
				sub  @sep3  @sepContent  @sepContent  @sepContent  @sepContent  @sep0' lookup sep4  ;
				sub  @sep4  @sepContent  @sepContent  @sepContent  @sepContent  @sep0' lookup sep5  ;

				sub  @sep1               @sepContent  @sepContent  @sepContent  @sep0' lookup sep2  ;
				sub  @sep2               @sepContent  @sepContent  @sepContent  @sep0' lookup sep3  ;
				sub  @sep3               @sepContent  @sepContent  @sepContent  @sep0' lookup sep4  ;
				sub  @sep4               @sepContent  @sepContent  @sepContent  @sep0' lookup sep5  ;

				sub  @sep1                            @sepContent  @sepContent  @sep0' lookup sep2  ;
				sub  @sep2                            @sepContent  @sepContent  @sep0' lookup sep3  ;
				sub  @sep3                            @sepContent  @sepContent  @sep0' lookup sep4  ;
				sub  @sep4                            @sepContent  @sepContent  @sep0' lookup sep5  ;

				sub  @sep1                                         @sepContent  @sep0' lookup sep2  ;
				sub  @sep2                                         @sepContent  @sep0' lookup sep3  ;
				sub  @sep3                                         @sepContent  @sep0' lookup sep4  ;
				sub  @sep4                                         @sepContent  @sep0' lookup sep5  ;

				sub  @sep1                                                      @sep0' lookup sep2  ;
				sub  @sep2                                                      @sep0' lookup sep3  ;
				sub  @sep3                                                      @sep0' lookup sep4  ;
				sub  @sep4                                                      @sep0' lookup sep5  ;

				sub                                                             @sep0' lookup sep1  ;

				} CALT_enumerateSeparators;


		# 2.4 register opening parenthesis

			lookup sepP1 {
				lookupflag 0;
				sub sep.1 by sep.1.1  ;
				sub sep.2 by sep.2.1  ;
				sub sep.3 by sep.3.1  ;
				sub sep.4 by sep.4.1  ;
				sub sep.5 by sep.5.1  ;
				} sepP1;


			lookup CALT_registerOpeningParen {
				lookupflag 0;

				# register opening parenthesis with different layer contents
				sub  @parenLeft                        @sepNoParen' lookup sepP1  ;
				sub  @parenLeft  @acc  @figComp        @sepNoParen' lookup sepP1  ;
				sub  @parenLeft        @figComp  @acc  @sepNoParen' lookup sepP1  ;
				sub  @parenLeft        @figComp        @sepNoParen' lookup sepP1  ;
				sub  @parenLeft        @acc            @sepNoParen' lookup sepP1  ;
				sub  @parenLeft        @figSingle      @sepNoParen' lookup sepP1  ;

				} CALT_registerOpeningParen;


		# 2.5 count parentheses

			lookup sepP2 {
				lookupflag 0;
				sub  sep.1    by  sep.1.2   ;
				sub  sep.2    by  sep.2.2   ;
				sub  sep.3    by  sep.3.2   ;
				sub  sep.4    by  sep.4.2   ;
				sub  sep.5    by  sep.5.2   ;

				sub  sep.1.1  by  sep.1.2   ;
				sub  sep.2.1  by  sep.2.2   ;
				sub  sep.3.1  by  sep.3.2   ;
				sub  sep.4.1  by  sep.4.2   ;
				sub  sep.5.1  by  sep.5.2   ;
				} sepP2;


			lookup sepP3 {
				lookupflag 0;
				sub  sep.1    by  sep.1.3   ;
				sub  sep.2    by  sep.2.3   ;
				sub  sep.3    by  sep.3.3   ;
				sub  sep.4    by  sep.4.3   ;
				sub  sep.5    by  sep.5.3   ;

				sub  sep.1.2  by  sep.1.3   ;
				sub  sep.2.2  by  sep.2.3   ;
				sub  sep.3.2  by  sep.3.3   ;
				sub  sep.4.2  by  sep.4.3   ;
				sub  sep.5.2  by  sep.5.3   ;
				} sepP3;


			lookup sepP4 {
				lookupflag 0;
				sub  sep.1    by  sep.1.4   ;
				sub  sep.2    by  sep.2.4   ;
				sub  sep.3    by  sep.3.4   ;
				sub  sep.4    by  sep.4.4   ;
				sub  sep.5    by  sep.5.4   ;

				sub  sep.1.3  by  sep.1.4   ;
				sub  sep.2.3  by  sep.2.4   ;
				sub  sep.3.3  by  sep.3.4   ;
				sub  sep.4.3  by  sep.4.4   ;
				sub  sep.5.3  by  sep.5.4   ;
				} sepP4;


			lookup CALT_countParens {
				lookupflag 0;

				sub  @sepP1  @parenContent  @parenContent  @sepNoParen' lookup sepP2  ;
				sub  @sepP2  @parenContent  @parenContent  @sepNoParen' lookup sepP3  ;
				sub  @sepP3  @parenContent  @parenContent  @sepNoParen' lookup sepP4  ;

				sub  @sepP1                 @parenContent  @sepNoParen' lookup sepP2  ;
				sub  @sepP2                 @parenContent  @sepNoParen' lookup sepP3  ;
				sub  @sepP3                 @parenContent  @sepNoParen' lookup sepP4  ;

				sub  @sepP1                                @sepNoParen' lookup sepP2  ;
				sub  @sepP2                                @sepNoParen' lookup sepP3  ;
				sub  @sepP3                                @sepNoParen' lookup sepP4  ;

				} CALT_countParens;


		# 2.6 pass back paren height

			lookup CALT_passBackParenHeight_1stRun {
				lookupflag 0;

				sub  @sepP1' lookup sepP2  @parenContent  @parenContent  @sepP2  ;
				sub  @sepP1' lookup sepP2  @parenContent                 @sepP2  ;
				sub  @sepP1' lookup sepP2                                @sepP2  ;

				sub  @sepP2' lookup sepP3  @parenContent  @parenContent  @sepP3  ;
				sub  @sepP2' lookup sepP3  @parenContent                 @sepP3  ;
				sub  @sepP2' lookup sepP3                                @sepP3  ;

				sub  @sepP3' lookup sepP4  @parenContent  @parenContent  @sepP4  ;
				sub  @sepP3' lookup sepP4  @parenContent                 @sepP4  ;
				sub  @sepP3' lookup sepP4                                @sepP4  ;

				} CALT_passBackParenHeight_1stRun;


			lookup CALT_passBackParenHeight_2ndRun {
				lookupflag 0;

				sub  @sepP2' lookup sepP3  @parenContent  @parenContent  @sepP3  ;
				sub  @sepP2' lookup sepP3  @parenContent                 @sepP3  ;
				sub  @sepP2' lookup sepP3                                @sepP3  ;

				sub  @sepP3' lookup sepP4  @parenContent  @parenContent  @sepP4  ;
				sub  @sepP3' lookup sepP4  @parenContent                 @sepP4  ;
				sub  @sepP3' lookup sepP4                                @sepP4  ;

				} CALT_passBackParenHeight_2ndRun;


			lookup CALT_passBackParenHeight_3rdRun {
				lookupflag 0;

				sub  @sepP3' lookup sepP4  @parenContent  @parenContent  @sepP4  ;
				sub  @sepP3' lookup sepP4  @parenContent                 @sepP4  ;
				sub  @sepP3' lookup sepP4                                @sepP4  ;

				} CALT_passBackParenHeight_3rdRun;


		# 2.7 register and propagate column for opening parenthesis

			lookup sepPA {
				lookupflag 0;
				sub  sep.1.1    by  sep.1.1.A  ;
				sub  sep.1.2    by  sep.1.2.A  ;
				sub  sep.1.3    by  sep.1.3.A  ;
				sub  sep.1.4    by  sep.1.4.A  ;
				sub  sep.2.1    by  sep.2.1.A  ;
				sub  sep.2.2    by  sep.2.2.A  ;
				sub  sep.2.3    by  sep.2.3.A  ;
				sub  sep.2.4    by  sep.2.4.A  ;
				sub  sep.3.1    by  sep.3.1.A  ;
				sub  sep.3.2    by  sep.3.2.A  ;
				sub  sep.3.3    by  sep.3.3.A  ;
				sub  sep.3.4    by  sep.3.4.A  ;
				sub  sep.4.1    by  sep.4.1.A  ;
				sub  sep.4.2    by  sep.4.2.A  ;
				sub  sep.4.3    by  sep.4.3.A  ;
				sub  sep.4.4    by  sep.4.4.A  ;
				sub  sep.5.1    by  sep.5.1.A  ;
				sub  sep.5.2    by  sep.5.2.A  ;
				sub  sep.5.3    by  sep.5.3.A  ;
				sub  sep.5.4    by  sep.5.4.A  ;

				sub  sep.1.1.B  by  sep.1.1.A  ;
				sub  sep.1.2.B  by  sep.1.2.A  ;
				sub  sep.1.3.B  by  sep.1.3.A  ;
				sub  sep.1.4.B  by  sep.1.4.A  ;
				sub  sep.2.1.B  by  sep.2.1.A  ;
				sub  sep.2.2.B  by  sep.2.2.A  ;
				sub  sep.2.3.B  by  sep.2.3.A  ;
				sub  sep.2.4.B  by  sep.2.4.A  ;
				sub  sep.3.1.B  by  sep.3.1.A  ;
				sub  sep.3.2.B  by  sep.3.2.A  ;
				sub  sep.3.3.B  by  sep.3.3.A  ;
				sub  sep.3.4.B  by  sep.3.4.A  ;
				sub  sep.4.1.B  by  sep.4.1.A  ;
				sub  sep.4.2.B  by  sep.4.2.A  ;
				sub  sep.4.3.B  by  sep.4.3.A  ;
				sub  sep.4.4.B  by  sep.4.4.A  ;
				sub  sep.5.1.B  by  sep.5.1.A  ;
				sub  sep.5.2.B  by  sep.5.2.A  ;
				sub  sep.5.3.B  by  sep.5.3.A  ;
				sub  sep.5.4.B  by  sep.5.4.A  ;
				} sepPA;

			lookup sepPB {
				lookupflag 0;
				sub  sep.1.1  by  sep.1.1.B  ;
				sub  sep.1.2  by  sep.1.2.B  ;
				sub  sep.1.3  by  sep.1.3.B  ;
				sub  sep.1.4  by  sep.1.4.B  ;
				sub  sep.2.1  by  sep.2.1.B  ;
				sub  sep.2.2  by  sep.2.2.B  ;
				sub  sep.2.3  by  sep.2.3.B  ;
				sub  sep.2.4  by  sep.2.4.B  ;
				sub  sep.3.1  by  sep.3.1.B  ;
				sub  sep.3.2  by  sep.3.2.B  ;
				sub  sep.3.3  by  sep.3.3.B  ;
				sub  sep.3.4  by  sep.3.4.B  ;
				sub  sep.4.1  by  sep.4.1.B  ;
				sub  sep.4.2  by  sep.4.2.B  ;
				sub  sep.4.3  by  sep.4.3.B  ;
				sub  sep.4.4  by  sep.4.4.B  ;
				sub  sep.5.1  by  sep.5.1.B  ;
				sub  sep.5.2  by  sep.5.2.B  ;
				sub  sep.5.3  by  sep.5.3.B  ;
				sub  sep.5.4  by  sep.5.4.B  ;
				} sepPB;



			lookup CALT_registerOpeningParenColumn {
				lookupflag 0;
				sub  @parenLeft      @sepParenNoColumn' lookup sepPB  ;
				sub  @acc  @figComp  @sepParenNoColumn' lookup sepPA  ;
				sub  @figComp  @acc  @sepParenNoColumn' lookup sepPB  ;
				sub  @parenContent   @sepParenNoColumn' lookup sepPB  ;
				} CALT_registerOpeningParenColumn;

			lookup CALT_forwardOpeningParenColumn {
				lookupflag 0;
				sub          @acc  @figComp  @sepParenNoColumn' lookup sepPA  ;
				sub  @sepPA  @parenContent   @sepParenNoColumn' lookup sepPA  ;
				sub  @sepPB  @parenContent   @sepParenNoColumn' lookup sepPB  ;
				sub  @sepPA                  @sepParenNoColumn' lookup sepPA  ;
				sub  @sepPB                  @sepParenNoColumn' lookup sepPB  ;
				} CALT_forwardOpeningParenColumn;

			lookup CALT_passBackOpeningParenColumn1stRun {
				lookupflag 0;
				sub  @sepParenNoClosingColumn' lookup sepPA  @acc          @figComp               ;
				sub  @sepParenNoClosingColumn' lookup sepPA  @parenContent                @sepPA  ;
				sub  @sepParenNoClosingColumn' lookup sepPA  @parenContent @parenContent  @sepPA  ;
				sub  @sepParenNoClosingColumn' lookup sepPA                               @sepPA  ;
				} CALT_passBackOpeningParenColumn1stRun;

			lookup CALT_passBackOpeningParenColumn2ndRun {
				lookupflag 0;
				sub  @sepParenNoClosingColumn' lookup sepPA  @acc          @figComp               ;
				sub  @sepParenNoClosingColumn' lookup sepPA  @parenContent                @sepPA  ;
				sub  @sepParenNoClosingColumn' lookup sepPA  @parenContent @parenContent  @sepPA  ;
				sub  @sepParenNoClosingColumn' lookup sepPA                               @sepPA  ;
				} CALT_passBackOpeningParenColumn2ndRun;

			lookup CALT_passBackOpeningParenColumn3rdRun {
				lookupflag 0;
				sub  @sepParenNoClosingColumn' lookup sepPA  @acc          @figComp               ;
				sub  @sepParenNoClosingColumn' lookup sepPA  @parenContent                @sepPA  ;
				sub  @sepParenNoClosingColumn' lookup sepPA  @parenContent @parenContent  @sepPA  ;
				sub  @sepParenNoClosingColumn' lookup sepPA                               @sepPA  ;
				} CALT_passBackOpeningParenColumn3rdRun;


		# 2.8 register and propagate column for closing parenthesis


			lookup sepPD {
				lookupflag 0;
				sub  sep.1.1.A  by  sep.1.1.A.D  ;
				sub  sep.1.2.A  by  sep.1.2.A.D  ;
				sub  sep.1.3.A  by  sep.1.3.A.D  ;
				sub  sep.1.4.A  by  sep.1.4.A.D  ;
				sub  sep.2.1.A  by  sep.2.1.A.D  ;
				sub  sep.2.2.A  by  sep.2.2.A.D  ;
				sub  sep.2.3.A  by  sep.2.3.A.D  ;
				sub  sep.2.4.A  by  sep.2.4.A.D  ;
				sub  sep.3.1.A  by  sep.3.1.A.D  ;
				sub  sep.3.2.A  by  sep.3.2.A.D  ;
				sub  sep.3.3.A  by  sep.3.3.A.D  ;
				sub  sep.3.4.A  by  sep.3.4.A.D  ;
				sub  sep.4.1.A  by  sep.4.1.A.D  ;
				sub  sep.4.2.A  by  sep.4.2.A.D  ;
				sub  sep.4.3.A  by  sep.4.3.A.D  ;
				sub  sep.4.4.A  by  sep.4.4.A.D  ;
				sub  sep.5.1.A  by  sep.5.1.A.D  ;
				sub  sep.5.2.A  by  sep.5.2.A.D  ;
				sub  sep.5.3.A  by  sep.5.3.A.D  ;
				sub  sep.5.4.A  by  sep.5.4.A.D  ;

				sub  sep.1.1.B  by  sep.1.1.B.D  ;
				sub  sep.1.2.B  by  sep.1.2.B.D  ;
				sub  sep.1.3.B  by  sep.1.3.B.D  ;
				sub  sep.1.4.B  by  sep.1.4.B.D  ;
				sub  sep.2.1.B  by  sep.2.1.B.D  ;
				sub  sep.2.2.B  by  sep.2.2.B.D  ;
				sub  sep.2.3.B  by  sep.2.3.B.D  ;
				sub  sep.2.4.B  by  sep.2.4.B.D  ;
				sub  sep.3.1.B  by  sep.3.1.B.D  ;
				sub  sep.3.2.B  by  sep.3.2.B.D  ;
				sub  sep.3.3.B  by  sep.3.3.B.D  ;
				sub  sep.3.4.B  by  sep.3.4.B.D  ;
				sub  sep.4.1.B  by  sep.4.1.B.D  ;
				sub  sep.4.2.B  by  sep.4.2.B.D  ;
				sub  sep.4.3.B  by  sep.4.3.B.D  ;
				sub  sep.4.4.B  by  sep.4.4.B.D  ;
				sub  sep.5.1.B  by  sep.5.1.B.D  ;
				sub  sep.5.2.B  by  sep.5.2.B.D  ;
				sub  sep.5.3.B  by  sep.5.3.B.D  ;
				sub  sep.5.4.B  by  sep.5.4.B.D  ;
				} sepPD;

			lookup sepPE {
				lookupflag 0;
				sub  sep.1.1.A  by  sep.1.1.A.E  ;
				sub  sep.1.2.A  by  sep.1.2.A.E  ;
				sub  sep.1.3.A  by  sep.1.3.A.E  ;
				sub  sep.1.4.A  by  sep.1.4.A.E  ;
				sub  sep.2.1.A  by  sep.2.1.A.E  ;
				sub  sep.2.2.A  by  sep.2.2.A.E  ;
				sub  sep.2.3.A  by  sep.2.3.A.E  ;
				sub  sep.2.4.A  by  sep.2.4.A.E  ;
				sub  sep.3.1.A  by  sep.3.1.A.E  ;
				sub  sep.3.2.A  by  sep.3.2.A.E  ;
				sub  sep.3.3.A  by  sep.3.3.A.E  ;
				sub  sep.3.4.A  by  sep.3.4.A.E  ;
				sub  sep.4.1.A  by  sep.4.1.A.E  ;
				sub  sep.4.2.A  by  sep.4.2.A.E  ;
				sub  sep.4.3.A  by  sep.4.3.A.E  ;
				sub  sep.4.4.A  by  sep.4.4.A.E  ;
				sub  sep.5.1.A  by  sep.5.1.A.E  ;
				sub  sep.5.2.A  by  sep.5.2.A.E  ;
				sub  sep.5.3.A  by  sep.5.3.A.E  ;
				sub  sep.5.4.A  by  sep.5.4.A.E  ;

				sub  sep.1.1.B  by  sep.1.1.B.E  ;
				sub  sep.1.2.B  by  sep.1.2.B.E  ;
				sub  sep.1.3.B  by  sep.1.3.B.E  ;
				sub  sep.1.4.B  by  sep.1.4.B.E  ;
				sub  sep.2.1.B  by  sep.2.1.B.E  ;
				sub  sep.2.2.B  by  sep.2.2.B.E  ;
				sub  sep.2.3.B  by  sep.2.3.B.E  ;
				sub  sep.2.4.B  by  sep.2.4.B.E  ;
				sub  sep.3.1.B  by  sep.3.1.B.E  ;
				sub  sep.3.2.B  by  sep.3.2.B.E  ;
				sub  sep.3.3.B  by  sep.3.3.B.E  ;
				sub  sep.3.4.B  by  sep.3.4.B.E  ;
				sub  sep.4.1.B  by  sep.4.1.B.E  ;
				sub  sep.4.2.B  by  sep.4.2.B.E  ;
				sub  sep.4.3.B  by  sep.4.3.B.E  ;
				sub  sep.4.4.B  by  sep.4.4.B.E  ;
				sub  sep.5.1.B  by  sep.5.1.B.E  ;
				sub  sep.5.2.B  by  sep.5.2.B.E  ;
				sub  sep.5.3.B  by  sep.5.3.B.E  ;
				sub  sep.5.4.B  by  sep.5.4.B.E  ;

				sub  sep.1.1.A.D  by  sep.1.1.A.E  ;
				sub  sep.1.2.A.D  by  sep.1.2.A.E  ;
				sub  sep.1.3.A.D  by  sep.1.3.A.E  ;
				sub  sep.1.4.A.D  by  sep.1.4.A.E  ;
				sub  sep.2.1.A.D  by  sep.2.1.A.E  ;
				sub  sep.2.2.A.D  by  sep.2.2.A.E  ;
				sub  sep.2.3.A.D  by  sep.2.3.A.E  ;
				sub  sep.2.4.A.D  by  sep.2.4.A.E  ;
				sub  sep.3.1.A.D  by  sep.3.1.A.E  ;
				sub  sep.3.2.A.D  by  sep.3.2.A.E  ;
				sub  sep.3.3.A.D  by  sep.3.3.A.E  ;
				sub  sep.3.4.A.D  by  sep.3.4.A.E  ;
				sub  sep.4.1.A.D  by  sep.4.1.A.E  ;
				sub  sep.4.2.A.D  by  sep.4.2.A.E  ;
				sub  sep.4.3.A.D  by  sep.4.3.A.E  ;
				sub  sep.4.4.A.D  by  sep.4.4.A.E  ;
				sub  sep.5.1.A.D  by  sep.5.1.A.E  ;
				sub  sep.5.2.A.D  by  sep.5.2.A.E  ;
				sub  sep.5.3.A.D  by  sep.5.3.A.E  ;
				sub  sep.5.4.A.D  by  sep.5.4.A.E  ;

				sub  sep.1.1.B.D  by  sep.1.1.B.E  ;
				sub  sep.1.2.B.D  by  sep.1.2.B.E  ;
				sub  sep.1.3.B.D  by  sep.1.3.B.E  ;
				sub  sep.1.4.B.D  by  sep.1.4.B.E  ;
				sub  sep.2.1.B.D  by  sep.2.1.B.E  ;
				sub  sep.2.2.B.D  by  sep.2.2.B.E  ;
				sub  sep.2.3.B.D  by  sep.2.3.B.E  ;
				sub  sep.2.4.B.D  by  sep.2.4.B.E  ;
				sub  sep.3.1.B.D  by  sep.3.1.B.E  ;
				sub  sep.3.2.B.D  by  sep.3.2.B.E  ;
				sub  sep.3.3.B.D  by  sep.3.3.B.E  ;
				sub  sep.3.4.B.D  by  sep.3.4.B.E  ;
				sub  sep.4.1.B.D  by  sep.4.1.B.E  ;
				sub  sep.4.2.B.D  by  sep.4.2.B.E  ;
				sub  sep.4.3.B.D  by  sep.4.3.B.E  ;
				sub  sep.4.4.B.D  by  sep.4.4.B.E  ;
				sub  sep.5.1.B.D  by  sep.5.1.B.E  ;
				sub  sep.5.2.B.D  by  sep.5.2.B.E  ;
				sub  sep.5.3.B.D  by  sep.5.3.B.E  ;
				sub  sep.5.4.B.D  by  sep.5.4.B.E  ;

				} sepPE;



			lookup CALT_registerClosingParenColumn {
				lookupflag 0;
				sub  @figComp  @acc  @parenRight  @sepParenNoClosingColumn' lookup sepPE  ;
				sub  @parenContent   @parenRight  @sepParenNoClosingColumn' lookup sepPD  ;
				} CALT_registerClosingParenColumn;

			lookup CALT_forwardClosingParenColumn {
				lookupflag 0;
				sub          @figComp  @acc  @sepParenNoClosingColumn' lookup sepPE  ;
				sub  @sepPE  @parenContent   @sepParenNoClosingColumn' lookup sepPE  ;
				sub          @parenContent   @sepParenNoClosingColumn' lookup sepPD  ;
				sub  @sepPE                  @sepParenNoClosingColumn' lookup sepPE  ;
				sub                          @sepParenNoClosingColumn' lookup sepPD  ;  # new version
				# sub                          @sepParenNoClosingColumn' lookup sepPE  ;  # old version: why PE??
				} CALT_forwardClosingParenColumn;


		# 2.9 substitute parentheses

				lookup paren1 {
					sub  @paren0  by  @paren1  ;
					} paren1;

				lookup paren2 {
					sub  @paren0  by  @paren2  ;
					} paren2;

				lookup paren3 {
					sub  @paren0  by  @paren3  ;
					} paren3;

				lookup paren4 {
					sub  @paren0  by  @paren4  ;
					} paren4;


				lookup CALT_substituteParens {
					lookupflag 0;

					sub          @paren0' lookup paren1  @parenContent  @parenContent                           @sepP1  ;
					sub          @paren0' lookup paren1  @parenContent                                          @sepP1  ;
					sub          @paren0' lookup paren1                                                         @sepP1  ;
					sub  @sepP1                          @parenContent  @parenContent  @paren0' lookup paren1           ;
					sub  @sepP1                                         @parenContent  @paren0' lookup paren1           ;
					sub  @sepP1                                                        @paren0' lookup paren1           ;

					sub          @paren0' lookup paren2  @parenContent  @parenContent                           @sepP2  ;
					sub          @paren0' lookup paren2  @parenContent                                          @sepP2  ;
					sub          @paren0' lookup paren2                                                         @sepP2  ;
					sub  @sepP2                          @parenContent  @parenContent  @paren0' lookup paren2           ;
					sub  @sepP2                                         @parenContent  @paren0' lookup paren2           ;
					sub  @sepP2                                                        @paren0' lookup paren2           ;

					sub          @paren0' lookup paren3  @parenContent  @parenContent                           @sepP3  ;
					sub          @paren0' lookup paren3  @parenContent                                          @sepP3  ;
					sub          @paren0' lookup paren3                                                         @sepP3  ;
					sub  @sepP3                          @parenContent  @parenContent  @paren0' lookup paren3           ;
					sub  @sepP3                                         @parenContent  @paren0' lookup paren3           ;
					sub  @sepP3                                                        @paren0' lookup paren3           ;

					sub          @paren0' lookup paren4  @parenContent  @parenContent                           @sepP4  ;
					sub          @paren0' lookup paren4  @parenContent                                          @sepP4  ;
					sub          @paren0' lookup paren4                                                         @sepP4  ;
					sub  @sepP4                          @parenContent  @parenContent  @paren0' lookup paren4           ;
					sub  @sepP4                                         @parenContent  @paren0' lookup paren4           ;
					sub  @sepP4                                                        @paren0' lookup paren4           ;

					} CALT_substituteParens;



# =================================================================================
# FEATURES

	# 0. PREFATORY SUBSTITUTIONS

		feature calt {

			lookup CALT_singleSubstitutions;

			} calt;

	# 1. LIGATURES ----------------------------------------------------------------

		feature liga {

			lookup LIGA_figures;
			lookup LIGA_slashedFigures;
			lookup LIGA_figuresPlus;
			lookup LIGA_tickedFigures;
			lookup LIGA_italicFigures;
			lookup LIGA_accidentals;
			lookup LIGA_parenthesizedAccidentals;

			} liga;

	# 2. SUBSTITUTIONS ------------------------------------------------------------

		feature calt {

			lookup CALT_invisibleParens;

			lookup CALT_addSeparators;
			lookup CALT_enumerateSeparators;

			lookup CALT_registerOpeningParen;
			lookup CALT_countParens;
			lookup CALT_passBackParenHeight_1stRun;
			lookup CALT_passBackParenHeight_2ndRun;
			lookup CALT_passBackParenHeight_3rdRun;

			lookup CALT_registerOpeningParenColumn;
			lookup CALT_forwardOpeningParenColumn;
			lookup CALT_passBackOpeningParenColumn1stRun;
			lookup CALT_passBackOpeningParenColumn2ndRun;
			lookup CALT_passBackOpeningParenColumn3rdRun;

			lookup CALT_registerClosingParenColumn;
			lookup CALT_forwardClosingParenColumn;
			lookup CALT_substituteParens;

			} calt;
